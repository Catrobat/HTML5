server {
	listen 80;
	client_max_body_size 80M;
	server_name share.catrob.at;
	root /var/www/share.catrob.at/current/web;

	location / {
    # try to serve file directly, fallback to app.php
    try_files $uri /app.php$is_args$args;
	}


    


    location ^~ /html5/ {
    root /var/www ;
    add_header 'Access-Control-Allow-Origin' '*';

    add_header 'Access-Control-Allow-Headers' 'origin, x-requested-with, content-type';

    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';


 location ~* \.(css|js) {
	 try_files $uri $uri/ /$1/$2;
} 
     rewrite ^/html5/player/([0-9]+)/([^/]*)/$ /html5/player/index.php?projectId=$1&lang=$2 last;
    rewrite ^/html5/player/([0-9]+)/([^/]*)$ /html5/player/index.php?projectId=$1&lang=$2 last;

    rewrite ^/html5/player/([0-9]+)/$ /html5/player/index.php?projectId=$1 last;

    rewrite ^/html5/player/([0-9]+)$ /html5/player/index.php?projectId=$1 last;
     rewrite ^/html5/rest/([^/]*)/(.*)$ /html5/rest/$1/index.php?servicePath=$2&version=$1 last;
     rewrite ^/html5/player/(.*)/([^/]*).(css|js) /html5/player/$2.$3 last;
    

	location ~* \.php(/|$) {
    	fastcgi_pass unix:/var/run/php5-fpm.sock;

		fastcgi_split_path_info ^(.+\.php)(/.*)$;

		include fastcgi_params;

		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		fastcgi_param HTTPS off;
  }


  }
  



  location ~ ^/app\.php(/|$) {
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param HTTPS off;
    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/app.php/some-path
    # Remove the internal directive to allow URIs like this
		internal;
	}

	access_log /var/log/nginx/access.log combined;
	error_log /var/log/nginx/error.log warn;
}

server {
	listen 443 ssl;
	client_max_body_size 80M;
	server_name share.catrob.at catrobat-share.ist.tugraz.at;
	root /var/www/share.catrob.at/current/web;
  ssl_certificate     /etc/nginx/sslkeys/catrob.at.crt;
  ssl_certificate_key /etc/nginx/sslkeys/catrob.at.key;
  ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
  fastcgi_param HTTPS on;

  location / {
    # try to serve file directly, fallback to app.php
    try_files $uri /app.php$is_args$args;
  }




location ^~ /html5/ {
    root /var/www ;
    add_header 'Access-Control-Allow-Origin' '*' ;

    add_header 'Access-Control-Allow-Headers' 'origin, x-requested-with, content-type';

    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';     
  

 location ~* \.(css|js) {
	 try_files $uri $uri/ /$1/$2;
} 
     rewrite ^/html5/player/([0-9]+)/([^/]*)/$ /html5/player/index.php?projectId=$1&lang=$2 last;
    rewrite ^/html5/player/([0-9]+)/([^/]*)$ /html5/player/index.php?projectId=$1&lang=$2 last;

    rewrite ^/html5/player/([0-9]+)/$ /html5/player/index.php?projectId=$1 last;

    rewrite ^/html5/player/([0-9]+)$ /html5/player/index.php?projectId=$1 last;
     rewrite ^/html5/rest/([^/]*)/(.*)$ /html5/rest/$1/index.php?servicePath=$2&version=$1 last;



	location ~* \.php(/|$) {
     fastcgi_pass unix:/var/run/php5-fpm.sock;

		fastcgi_split_path_info ^(.+\.php)(/.*)$;

		include fastcgi_params;

		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		fastcgi_param HTTPS on;
    fastcgi_param HTTP_SCHEME https;
  }


  }
  
  
  location ~ ^/app\.php(/|$) {
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param HTTPS on;
    fastcgi_param HTTP_SCHEME https;
    # Prevents URIs that include the front controller. This will 404:
    # http://domain.tld/app.php/some-path
    # Remove the internal directive to allow URIs like this
		internal;
	}

	access_log /var/log/nginx/access.log combined;
	error_log /var/log/nginx/error.log warn;
}

#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
